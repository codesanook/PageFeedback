<!DOCTYPE html>
<html>
<head>
    <title>Page Feedback</title>
    <link href="~/Content/css/metro-bootstrap.css" rel="stylesheet" />
    <link href="~/Content/css/Site.css" rel="stylesheet" />
    <script src="~/Content/js/jquery-2.1.3.min.js"></script>
    <script src="~/Content/js/jquery.widget.min.js"></script>
    <script src="~/Content/js/metro.min.js"></script>
    <script>

        var fbAppId = 161236587286870;
        var facebookPermissionScopes = [];

        facebookPermissionScopes = facebookPermissionScopes.join(",");
        console.log("facebookPermissionScopes: %s", facebookPermissionScopes);

        $(document).ready(function () {          

            $(document).on('gotFbToken', function (e, fb) {
                var fbId = fb.uid;
                var fbToken = fb.token;

                var jsonData = JSON.stringify({ fbToken: fbToken });
                var successCallback = function (result) {
                    console.log(result);
                    //alert("got new FbToken");
                    $('#token h1').text('Token Valid !').css({'font-size':'28px'});
                };

                var errorCallback = function (result) {
                    console.log(result);
                    alert("error FbToken");
                };

                $.ajax({
                    url: "/fb/token",
                    data: jsonData,
                    type: 'POST',
                    success: successCallback,
                    error: errorCallback,
                    async: false
                });
            });

            $('#publish').click(function () {
                var successCallback = function (result) {
                    $('#publish h1').text('Publish !!!').css({ 'font-size': '28px' });
                };

                var errorCallback = function (result) {
                    console.log(result);
                    alert("error publish");
                };

                $.ajax({
                    url: "/fb/publishmessage",
                    type: 'GET',
                    success: successCallback,
                    error: errorCallback,
                    async: false
                });
            });            

            $(document).on('fbLoaded', function () {
                console.log('fbLoaded called');

                FB.getLoginStatus(function (response) {
                    if (response.status === 'connected') {

                        console.log('User connected and authorize');
                        var uid = response.authResponse.userID;
                        var accessToken = response.authResponse.accessToken;

                        $(document).trigger('gotFbToken', [{ uid: uid, token: accessToken }]);

                    } else if (response.status === 'not_authorized') {
                        // the user is logged in to Facebook, but has not authenticated your app
                        console.log('User connected but not authorize');
                        try {
                            FB.logout(function (response) {
                                // user is now logged out
                                console.log('User log out');
                                FB.login(logInFacebookCallback, {
                                    scope: facebookPermissionScopes,
                                    return_scopes: true
                                });
                            });
                        } catch (err) {
                            console.log(err);
                        }


                    } else {
                        // the user isn't logged in to Facebook.
                        console.log('User log in first time');
                        try {
                            FB.login(logInFacebookCallback, {
                                scope: facebookPermissionScopes,
                                return_scopes: true
                            });
                        } catch (err) {
                            console.log(err);
                        }
                    }
                });

                function logInFacebookCallback(response) {
                    if (!response.authResponse) {
                        console.log(response.authResponse);
                        return;
                    }
                    var accessToken = response.authResponse.accessToken;
                    var uid = response.authResponse.userID;
                    $(document).trigger('gotFbToken', [{ uid: uid, token: accessToken }]);
                }

            });
        });
    </script>
</head>
<body class="metro">
    <div id="fb-root"></div>
    <script type="text/javascript">
        window.fbAsyncInit = function () {
            FB.init({
                appId: fbAppId,
                status: true,
                xfbml: true
            });
            $(document).trigger('fbLoaded');
        };
        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) { return; }
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/en_US/all.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));
    </script>

    <header>
        <h1>Page Feedback</h1>
    </header>
    <div id="main" class="contanier-fluid">

        <div class="tile">
            <div class="tile-content image">
                <img src="/content/images/author.jpg">
            </div>
            <div class="brand">
                <span class="label fg-white">Theeranit</span>
            </div>
        </div>


        <div id="token" class="tile double bg-green">
            <div class="tile-content icon">
                <h1 style="color: white; text-align: center;">Token</h1>
            </div>
            <div class="tile-status">
                <span class="name">Token</span>
            </div>
        </div>

        <div id="publish" class="tile double bg-blue">
            <div class="tile-content icon">
                <h1 style="color: white; text-align: center;">Publish</h1>
            </div>
            <div class="tile-status">
                <span class="name">Publish</span>
            </div>
        </div>
        <div id="summary" class="tile double bg-red">
            <div class="tile-content icon">
                <h1 style="color: white; text-align: center;">Summary</h1>
            </div>
            <div class="tile-status">
                <span class="name">Summary</span>
            </div>
        </div>
    </div>
</body>
</html>
